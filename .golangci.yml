# This is built using - https://github.com/golangci/golangci-lint/blob/main/.golangci.reference.yml
# To fix false positives see -https://github.com/golangci/golangci-lint/blob/f6b5aa31704fbfe1845f0453de142fc8f0e303db/docs/src/docs/usage/false-positives.mdx#L4
version: 2

run:
  # Increase timeout for large codebase analysis
  deadline: 5m

  # Prevent go.mod changes during linting in CI
  modules-download-mode: readonly

linters:
  # Enable additional linters beyond defaults for better code quality
  enable:
    - bodyclose        # Ensures response bodies are closed
    - dupl             # Reports code clones
    - goconst          # Finds repeated strings that could be constants
    - gocritic         # The most opinionated Go source code linter
    - gocyclo          # Checks cyclomatic complexity
    - misspell         # Finds commonly misspelled English words
    - nakedret         # Finds naked returns in functions greater than a specified function length
    - prealloc         # Suggests preallocating slices when their capacity is known
    - unconvert        # Removes unnecessary type conversions
    - unparam          # Reports unused function parameters
    - gomoddirectives  # Manages the use of 'replace', 'retract', and 'exclude' directives in go.mod
    - copyloopvar      # Detects places where loop variables are copied (new in v2.x)
    - durationcheck    # Check for two durations multiplied together (new in v2.x)
    - errorlint        # Finds code that will cause problems with Go 1.13+ error wrapping (new in v2.x)
    - grouper          # Analyze expression groups (new in v2.x)
    - maintidx         # Measures the maintainability index of each function (new in v2.x)
    - makezero         # Finds slice declarations with non-zero initial length (new in v2.x)
    - predeclared      # Find code that shadows Go's predeclared identifiers (new in v2.x)
    - usestdlibvars    # Detect possibility to use variables/constants from Go standard library (new in v2.x)
    - whitespace       # Checks for unnecessary newlines (new in v2.x)

  # Disable linters that are too strict or cause false positives
  disable:
    - godot            # Disabled because trailing periods in comments are not our style
    - exhaustruct      # Requires setting all struct fields explicitly, which is very invasive
    - paralleltest     # Can cause race conditions and test interference in complex test suites
    - nlreturn         # Requires adding newlines before all returns, which is very invasive

linters-settings:
  dupl:
    threshold: 100 # < 150 for better clone detection
  misspell:
    locale: US
  lll:
    line-length: 120  # > 80
  gocritic:
    enabled-tags: # more tags than default
      - diagnostic
      - style
      - performance
  funlen:
    lines: 100  # > 60
    statements: 50  # > 40

issues:
  exclusions:
    rules:
      # Exclude some linters from running on test files to reduce noise
      - path: _test\.go
        linters:
          - gocyclo     # Test functions often have higher complexity
          - dupl        # Test code often has similar patterns
          - gosec       # Security issues in test files are less critical
