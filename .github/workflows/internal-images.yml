# yamllint --format github .github/workflows/internal-images.yml
---
name: internal-images

# Refresh the tags once a day. This limits impact of rate-limited images. See RATIONALE.md
on:
  schedule:
    - cron: "23 3 * * *"
  workflow_dispatch:  # Allows manual refresh

env:  # Update this prior to requiring a higher minor version in go.mod
  GO_VERSION: "1.17"  # Latest patch

# This builds images and pushes them to ghcr.io/tetratelabs/func-e-internal:$tag
# Using these in tests and as a parent (FROM) avoids docker.io rate-limits particularly on pull requests.
#
# To troubleshoot, run locally with docker and install go directly. Ex:
# ```bash
# $ docker run -ti -v $PWD:/func-e --rm centos:8
# [root@d37da4601545 /]# cd /func-e
# now execute your setup commands!
# ```
jobs:
  build-and-push-images:
    strategy:
      matrix:
        # Be precise in tag versions to improve reproducibility
        include:
          # This installs the dependencies needed to build func-e including the latest patch of go
          # CentOS' root user shell is /bin/bash so go env is set via ~/.bashrc
          #
          # Note: This uses gimme so that we can install the latest patch of go without knowing what
          # that is, or parsing it on our own. This is more flexible and removes update maintenance
          # we'd have if we hard coded a specific patch. See https://github.com/travis-ci/gimme
          - dockerfile: |
              FROM centos:8
              RUN yum install -y --quiet make which git gcc && yum clean all
              ARG GO_VERSION
              RUN curl -sSL https://raw.githubusercontent.com/travis-ci/gimme/master/gimme | GIMME_GO_VERSION=$GO_VERSION.x bash && \
                  cat ~/.gimme/envs/latest.env >> ~/.bashrc
              ENTRYPOINT ["/bin/bash"]
            target_tag: centos8
    runs-on: ubuntu-latest
    steps:
      # Same as doing this locally: echo "${GHCR_TOKEN}" | docker login ghcr.io -u "${GHCR_TOKEN}" --password-stdin
      - name: Login into GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          # GHCR_TOKEN=<hex token value>
          #   - pushes Docker images to ghcr.io
          #   - create via https://github.com/settings/tokens
          #   - assign via https://github.com/organizations/tetratelabs/settings/secrets/actions
          #   - needs repo:status, public_repo, write:packages, delete:packages
          password: ${{ secrets.GHCR_TOKEN }}

      # We need QEMU and Buildx for multi-platform (amd64+arm64) image push. See RATIONALE.md
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v1

      - name: Write Dockerfile
        run: |
          cat > Dockerfile <<'EOF'
          ${{ matrix.dockerfile }}
          EOF

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          build-args: GO_VERSION=${{ env.GO_VERSION }}
          platforms: linux/amd64,linux/arm64  # arm64 is run only by Travis. See RATIONALE.md
          tags: ghcr.io/${{ github.repository_owner }}/func-e-internal:${{ matrix.target_tag }}
