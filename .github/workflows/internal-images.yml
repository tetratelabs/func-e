# yamllint --format github .github/workflows/internal-images.yml
---
name: internal-images

# Refresh the tags once a day. This limits impact of rate-limited images. See RATIONALE.md
on:
  schedule:
    - cron: "23 3 * * *"
  workflow_dispatch:  # Allows manual refresh

# This builds images and pushes them to ghcr.io/tetratelabs/func-e-internal:$tag
# Using these in tests and as a parent (FROM) avoids docker.io rate-limits particularly on pull requests.
#
# To test this, try running end-to-end (e2e) tests!
# ```bash
# $ docker run --pull always --rm -v $PWD:/work ghcr.io/tetratelabs/func-e-internal:centos-8 e2e
# ```
#
# Make is the default entrypoint. To troubleshoot, use /bin/bash:
# ```bash
# $ docker run --pull always --rm -v $PWD:/work -it --entrypoint /bin/bash ghcr.io/tetratelabs/func-e-internal:centos-8
# [runner@babce89b5580 work]$
# ```
jobs:
  build-and-push-images:
    runs-on: ubuntu-20.04  # Hard-coding an LTS means maintenance, but only once each 2 years!
    strategy:
      matrix:
        include:
          - parent_image: centos:8  # Envoy requires CentOS >=8. See tetratelabs/archive-envoy#17
          - parent_image: ubuntu:20.04  # Always match runs-on!

    steps:
      # Same as doing this locally: echo "${GHCR_TOKEN}" | docker login ghcr.io -u "${GHCR_TOKEN}" --password-stdin
      - name: "Login into GitHub Container Registry"
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          # GHCR_TOKEN=<hex token value>
          #   - pushes Docker images to ghcr.io
          #   - create via https://github.com/settings/tokens
          #   - assign via https://github.com/organizations/tetratelabs/settings/secrets/actions
          #   - needs repo:status, public_repo, write:packages, delete:packages
          password: ${{ secrets.GHCR_TOKEN }}

      # We need QEMU and Buildx for multi-platform (amd64+arm64) image push.
      # Note: arm64 is run only by Travis. See RATIONALE.md
      - name: "Setup QEMU"
        uses: docker/setup-qemu-action@v1

      - name: "Setup Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Export Go revision matching go.mod"
        run: |  # Ex. 1.17 -> /opt/hostedtoolcache/go/1.17.1/x64 -> GO_REVISION=1.17.1
          go_release=$(sed -n 's/^go //gp' go.mod)
          # Ex. /Users/runner/hostedtoolcache/go/1.17.1/x64
          go_root=$(ls -d "${RUNNER_TOOL_CACHE}"/go/"${go_release}"*/x64|sort -n|tail -1)
          rev=$(echo ${go_root}|cut -d/ -f5)
          echo "GO_REVISION=${rev}" >> $GITHUB_ENV

      - name: "Build and push"
        run: |
          docker_tag=ghcr.io/${{ github.repository_owner }}/func-e-internal:${PARENT_IMAGE//:/-}
          docker buildx build --push \
            --platform linux/amd64,linux/arm64 \
            --build-arg parent_image=${PARENT_IMAGE} \
            --build-arg go_revision=${GO_REVISION} \
            -t ${docker_tag} .github/workflows
        env:
          PARENT_IMAGE: ${{ matrix.parent_image }}
