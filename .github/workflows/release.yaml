# `name` value will appear "as is" in the badge.
# See https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#adding-a-workflow-status-badge-to-your-repository
# yamllint --format github .github/workflows/release.yaml
---
name: "release"

on:
  push:
    tags:
      - '**'
  # workflow_dispatch will let us manually trigger the workflow from GitHub actions dashboard.
  # This is important because sometimes the macos build fails due to Docker installation.
  # See https://docs.github.com/en/free-pro-team@latest/actions/managing-workflow-runs/manually-running-a-workflow
  workflow_dispatch:

jobs:
  getenvoy:
    name: "Release `getenvoy` CLI"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          # fetch all history for all tags and branches (needed for changelog)
          fetch-depth: 0

      - name: "Set up Go"
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.3'

      - name: "Login into DockerHub"
        uses: azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: "Run GoReleaser"
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_GETENVOY_GITHUB_TOKEN: ${{ secrets.GETENVOY_CI_GITHUB_TOKEN }}

  e2e:
    name: Run e2e tests (${{ matrix.runner.os }})
    needs:
      - getenvoy
    runs-on: ${{ matrix.runner.os }}
    timeout-minutes: 90  # instead of 360 by default
    strategy:
      fail-fast: false  # don't fail fast as sometimes failures are operating system specific
      matrix:
        runner:
          - os: macos-latest
          - os: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Install Go"
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.3'

      - name: "Get tag name"
        run: | # Trim "v" prefix in the release tag
          RELEASE_TAG=${GITHUB_REF#refs/*/}
          if [[ "${RELEASE_TAG}" = v* ]]; then RELEASE_VERSION="${RELEASE_TAG:1}"; else RELEASE_VERSION="${RELEASE_TAG}"; fi
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
          echo "RELEASE_TAG=${RELEASE_TAG}" >> $GITHUB_ENV
          echo "OS_NAME=$(uname -s)" >> $GITHUB_ENV

      - name: "Download `getenvoy` binary from GitHub release assets"
        env:
          INPUT_FILE: getenvoy_${{ env.RELEASE_VERSION }}_${{ env.OS_NAME }}_x86_64.tar.gz
          INPUT_VERSION: tags/${{ env.RELEASE_TAG }}
        run: |  # extract getenvoy to location used in `make e2e`. don't chmod because tar.gz should be correct.
          curl -s https://raw.githubusercontent.com/dsaltares/fetch-gh-release-asset/0.0.5/fetch_github_asset.sh | bash
          GOOS=$(uname -s|tr '[:upper:]' '[:lower:]')
          mkdir -p build/bin/${GOOS}/amd64
          tar -C build/bin/${GOOS}/amd64 -xf ${INPUT_FILE} getenvoy

      - name: "Run e2e tests using released `getenvoy` binary"
        run: make e2e
