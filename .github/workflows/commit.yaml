# `name` value will appear "as is" in the badge.
# See https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#adding-a-workflow-status-badge-to-your-repository
# yamllint --format github .github/workflows/commit.yaml
---
name: "build"

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '**'
  # workflow_dispatch will let us manually trigger the workflow from GitHub actions dashboard.
  # This is important because sometimes the macos build fails due to Docker installation.
  # See https://docs.github.com/en/free-pro-team@latest/actions/managing-workflow-runs/manually-running-a-workflow
  workflow_dispatch:

jobs:
  test:
    name: "Run unit tests (${{ matrix.os }})"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90  # instead of 360 by default
    strategy:
      fail-fast: false  # don't fail fast as sometimes failures are operating system specific
      matrix:
        go-version: [1.16.3]
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Install Go"
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: "Cache dependencies"
        uses: actions/cache@v2
        with:
          # This combines unrelated caches because actions/cache@v2 doesn't support multiple
          # instances, rather a combined path. https://github.com/actions/cache/issues/16
          path: |
            ~/.getenvoy/builds
            ~/go/pkg/mod
            ~/go/bin/*-v*
          # '.bingo/*.sum' files generate inconsistently when building `~/go/bin/*-v*`. We key '.bingo/*.mod' instead.
          key: test-${{ runner.os }}-${{ matrix.go-version }}-go-${{ hashFiles('pkg/reference.txt', 'go.sum', '.bingo/*.mod') }}
          restore-keys: test-${{ runner.os }}-${{ matrix.go-version }}-go-

      - name: "Verify clean check-in"
        run: make check

      - name: "Run unit tests"
        run: make test

      - name: "Build the `getenvoy` binary"
        run: make bin

      - name: "Run e2e tests using the `getenvoy` binary"
        run: make e2e

      - name: "Generate test coverage report"
        if: runner.os == 'Linux'  # no need to do this per operating system
        run: make coverage

      - name: "Upload test coverage report"
        uses: actions/upload-artifact@v2
        if: runner.os == 'Linux'  # no need to do this per operating system
        with:
          name: coverage
          path: build/coverage
